coolclock pcg -> almost solely to blame on field analysis in jquery + a few sites that the pessimistic did not have (does that matter for the precision?) + a few dynamic call sites that had diff offsets in the pcg.... jquery version ffs
beslimed -> almost solely to blame on field analysis in mootools, ignorance of dynamic fields is also a cause... some call sites did [x]() this caused these call sites to be missed, overridden native functions like Window...... sometimes a callback function (bad for pcg)
flotr -> function retval x2, field analysis again, native function overriding like object.keys, call sites like [x]() of course. Often uses methodize -> affects overall precision a lot (makes ocg more accurate).... important callback -> initializing a new protoype class (used a lot) not sure if ocg got this.... native functions that were overriden like bind, window and Element, Objects.keys
fullcalendar -> call sites like [x]() * 3 (especially in jq-ui 1.8.7), callback functions in fullcalendar.js, pessimistic could not resolve jquery with $, field based analysis..... things like find, offset, css, add, Sizzle.... jquery-ui causes a lot of spurious edges (about 200 spurious edges have been researched, out of 1500)
htmledit -> dynamic binding, words like each, data, css
markitup -> ocg finds jquery paths (but why), callbacks, dynamic binding, jquery with selectors can cause this ocg > pcg


  jQuery.each(('blur focus focusin focusout load resize scroll unload click dblclick ' + 'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' + 'change select submit keydown keypress keyup error').split(' '), function(i, name) {
  jQuery.fn[name] = function(data, fn) {




theory -> newer versions contain more each etc -> lower precision




hmm:

function getXHTML(data) {
  return new Html2Xhtml(data).parse();
}
;
function Html2Xhtml(data) {
  this.data = data || '';
}
;
xhtml.js@2:35-55